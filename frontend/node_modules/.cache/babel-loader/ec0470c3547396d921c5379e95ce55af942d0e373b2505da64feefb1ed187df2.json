{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhi\\\\cdp-support-chatbot\\\\frontend\\\\src\\\\components\\\\ChatMessage.js\";\nimport React from 'react';\nimport './ChatMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatMessage({\n  message\n}) {\n  const {\n    text,\n    sender,\n    sources,\n    error\n  } = message;\n\n  // Process the text to properly format numbered lists and sections\n  const processText = text => {\n    if (!text) return '';\n\n    // Split by CDP sections if they exist\n    const sections = text.split(/From [A-Za-z]+:/);\n    if (sections.length > 1) {\n      // There are multiple CDP sections\n      let result = '';\n      const cdpNames = text.match(/From [A-Za-z]+:/g) || [];\n      for (let i = 0; i < cdpNames.length; i++) {\n        const cdpName = cdpNames[i];\n        const sectionContent = sections[i + 1] || '';\n        result += `<div class=\"cdp-section\">\n          <h4>${cdpName}</h4>\n          ${formatSteps(sectionContent)}\n        </div>`;\n      }\n      return result;\n    } else {\n      // Single content block\n      return formatSteps(text);\n    }\n  };\n\n  // Format steps and lists\n  const formatSteps = content => {\n    if (!content) return '';\n\n    // Format numbered steps\n    content = content.replace(/(\\d+)\\.\\s+(.*?)(?=\\n\\d+\\.|\\n\\n|$)/gs, '<li class=\"step\">$1. $2</li>');\n\n    // Format bullet points\n    content = content.replace(/(?:^|\\n)[-•]\\s+(.*?)(?=\\n[-•]|\\n\\n|$)/gs, '<li>$1</li>');\n\n    // Wrap lists\n    content = content.replace(/<li class=\"step\">(.*?)<\\/li>(\\s*<li class=\"step\">.*?<\\/li>)+/gs, '<ol class=\"steps\">$&</ol>');\n    content = content.replace(/<li>(.*?)<\\/li>(\\s*<li>.*?<\\/li>)+/gs, '<ul>$&</ul>');\n\n    // Format paragraphs\n    content = content.replace(/(?:^|\\n\\n)([^<\\n].*?)(?=\\n\\n|$)/gs, '<p>$1</p>');\n    return content;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${sender} ${error ? 'error' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: processText(text)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), sources && sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sources\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sources-title\",\n          children: \"Sources:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sources.map((source, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: source,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatMessage","message","text","sender","sources","error","processText","sections","split","length","result","cdpNames","match","i","cdpName","sectionContent","formatSteps","content","replace","className","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","map","source","index","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/Nikhi/cdp-support-chatbot/frontend/src/components/ChatMessage.js"],"sourcesContent":["import React from 'react';\r\nimport './ChatMessage.css';\r\n\r\nfunction ChatMessage({ message }) {\r\n  const { text, sender, sources, error } = message;\r\n  \r\n  // Process the text to properly format numbered lists and sections\r\n  const processText = (text) => {\r\n    if (!text) return '';\r\n    \r\n    // Split by CDP sections if they exist\r\n    const sections = text.split(/From [A-Za-z]+:/);\r\n    \r\n    if (sections.length > 1) {\r\n      // There are multiple CDP sections\r\n      let result = '';\r\n      const cdpNames = text.match(/From [A-Za-z]+:/g) || [];\r\n      \r\n      for (let i = 0; i < cdpNames.length; i++) {\r\n        const cdpName = cdpNames[i];\r\n        const sectionContent = sections[i+1] || '';\r\n        \r\n        result += `<div class=\"cdp-section\">\r\n          <h4>${cdpName}</h4>\r\n          ${formatSteps(sectionContent)}\r\n        </div>`;\r\n      }\r\n      \r\n      return result;\r\n    } else {\r\n      // Single content block\r\n      return formatSteps(text);\r\n    }\r\n  };\r\n  \r\n  // Format steps and lists\r\n  const formatSteps = (content) => {\r\n    if (!content) return '';\r\n    \r\n    // Format numbered steps\r\n    content = content.replace(/(\\d+)\\.\\s+(.*?)(?=\\n\\d+\\.|\\n\\n|$)/gs, '<li class=\"step\">$1. $2</li>');\r\n    \r\n    // Format bullet points\r\n    content = content.replace(/(?:^|\\n)[-•]\\s+(.*?)(?=\\n[-•]|\\n\\n|$)/gs, '<li>$1</li>');\r\n    \r\n    // Wrap lists\r\n    content = content.replace(/<li class=\"step\">(.*?)<\\/li>(\\s*<li class=\"step\">.*?<\\/li>)+/gs, '<ol class=\"steps\">$&</ol>');\r\n    content = content.replace(/<li>(.*?)<\\/li>(\\s*<li>.*?<\\/li>)+/gs, '<ul>$&</ul>');\r\n    \r\n    // Format paragraphs\r\n    content = content.replace(/(?:^|\\n\\n)([^<\\n].*?)(?=\\n\\n|$)/gs, '<p>$1</p>');\r\n    \r\n    return content;\r\n  };\r\n  \r\n  return (\r\n    <div className={`message ${sender} ${error ? 'error' : ''}`}>\r\n      <div className=\"message-content\">\r\n        <div \r\n          dangerouslySetInnerHTML={{ \r\n            __html: processText(text) \r\n          }}\r\n        />\r\n        \r\n        {sources && sources.length > 0 && (\r\n          <div className=\"sources\">\r\n            <p className=\"sources-title\">Sources:</p>\r\n            <ul>\r\n              {sources.map((source, index) => (\r\n                <li key={index}>\r\n                  <a \r\n                    href={source} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {source}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}