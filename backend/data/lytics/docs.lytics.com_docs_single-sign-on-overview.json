{
  "url": "https://docs.lytics.com/docs/single-sign-on-overview",
  "title": "Single Sign-On",
  "content": "Single Sign-On\nSuggest Edits\nðŸš§\nLytics supports Single Sign-On (SSO) by using Google Cloud Identity Platform as a service provider using SAML protocol. Lytics integrates with Identity Providers (IdPs) in such a way that the Service Provider (SP) initiates SSO.\nIDP-initiated SSO has been deprecated and is no longer supported by Lytics\n.\nOverview\nSingle Sign-On (SSO) allows employees to safely and securely access a host of Internet tools with a single username and password. There are four primary reasons why your business should consider leveraging Single Sign-On:\nSSO helps the end user.\nImplementing SSO means employees are required to commit just one password to memory. With one password to remember, a user can easily create and remember a unique and secure password without writing it down. SSO reduces password fatigue and frustration and makes the employee more efficient.\nSSO benefits the company.\nFewer passwords to remember equals fewer calls to the helpdesk, resulting in more time spent on other tasks for both the end user and IT. Fewer calls to the helpdesk (which is oftentimes outsourced) means a reduction in cost to the company as well.\nSSO improves security.\nWhen employees are required to remember numerous passwords, it is easy to fall into lazy habits, such as using simple, easy-to-remember passwords, which are more susceptible to hacking. Or writing passwords down on Post-it notes where they can easily be stolen or fall into the wrong hands.\nSSO helps with compliance.\nSSO helps companies increase control over the user's access to certain information as well as easily enforce password change policies. This makes it simpler for organizations to comply with HIPAA, SOX, and other regulatory groups.\nSP-Initiated SSO\nLytics supports enterprise Single Sign-On (SSO) by using\nGoogle Cloud Identity Platform\nas a service provider using\nSAML protocol\n. Lytics integrates with Identity Providers (IdPs) in such a way that the Service Provider (SP) initiates SSO.\nOnce implemented, users will log in to Lytics via a\nspecial SSO form\nthat only requires an email address. Lytics will recognize the email address and open a pop-up to the user's IdP to complete the login. Once the IdP verifies credentials, the pop-up will close, redirecting the user to a logged-in instance of their Lytics dashboard. Behind the scenes, a customer's IdP will communicate with the Lytics APIs, which use\nGoogle Cloud Identity Platform\nto validate the login. This document describes the process for integrating with a new IdP that uses SAML.\nService Provider Configuration\nTo configure SAML for the Lytics service provider, some information is required about your IdP. If you have a metadata file that contains SAML provider information, this may be appropriate, but please ensure that the following information is provided to\nLytics Support\n:\nEntity ID\nSign In URL\nX509 Signing Certificate\nFurther configuration details, such as mappings, may need to be provided, but the Lytics implementation only requires the email address field to be mapped. Once this information has been received, Lytics can configure the SAML connection in the Google Cloud Identity Platform.\nIdP Configuration\nAfter Lytics configures the SAML connection on the service provider,\nLytics Support\nwill provide the following key fields of information to the customer to complete the configuration in their IdP.\nAssertion Consumer Service (ACS) URL (aka postback or callback URL)\nEntity ID of the Service Provider\nSign-in URL\nWith this information, your IdP connection can be configured to complete the SSO integration.\nðŸ“˜\nAt this time, Lytics does not support providing this information in an XML metadata file. Additional information about the Service Provider may be provided on request.\nTesting SSO\nOnce all the information has been configured in both the IdP and the Lytics service provider, you can test and verify that the SSO implementation works as expected. If you are using SSO as your only sign-in method, please disable any password restriction or expiration settings that may have been enabled in the UI.\nDuring the testing process, Lytics can be configured to allow both SSO login and regular username and password (or Google OAuth) login through the app. This allows users to test SSO without disrupting the day-to-day usage of the app.\nIf requested, once the SSO implementation has been tested and verified, Lytics can disable the use of other login types for an account.\nTroubleshooting SSO\nIf it's known that SSO will be added to an account, the user email addresses added to the account should match the email address present within the IdP. If the email address doesnâ€™t match, the login will fail as Lytics will not be able to verify that there is a user with that email address.\nFor instance, if the email listed in the IdP is\nabc@123\nand within Lytics, it is\ndef@456\n, then there will be potentially multiple error points for a user trying to log in via the SSO form on Lytics.\nIf the user enters\nabc@123\ninto the IdP pop-up, it will immediately fail as we use the Lytics account user to determine which IdP to redirect to. You would see an error message like the following:\nHowever, should the user enter\ndef@456\n(their Lytics account email), they will be redirected to their IdP, but the verification of the login will fail once information is sent back to Lytics.\nTo remedy this situation, you would need to create a new user within Lytics with the email address\nabc@123\nfor the SSO login to be successful.  You can check, add, and remove users for an account using the\nManaging Users\nguide as a reference.\nLytics Support\ncan assist in the troubleshooting process. When testing for the first time, Lytics can enable logging to help troubleshoot any issues you encounter. With this, the team can help debug if you provide information on the login attempt, such as the login time, user, and account.\nIf youâ€™re encountering a verification error, but you've checked that your emails from the IdP and Lytics match, this may be an issue with the SAML configuration either on the IdP or SP side. Contact\nLytics Support\nwith details of the issue, and our team can coordinate a fix.\nAccount Structure with SSO\nIt should also be noted that primary accounts (master accounts) are decided as the first account that a user was added to.  Due to this,  users from a single group/organization will often have different primary accounts. This is important for SSO as it will also be the account the user is logged into at the start of their session. If SSO is enabled as the only means of login on one account and a user attempts to log in using Google OAuth or their username and password, the login session will fail. The following options are possible solutions:\nAdd that user to your IdP.\nAdd other logging methods (Google OAuth, username/password).\nRemove that user from all accounts and then add them back, with the first account being the one you want to be their primary account.\nAssigning Roles using SSO\nConfiguring Role Assertions for SSO in Lytics\nThe Lytics team can configure Single Sign-On (SSO) to assign roles via SSO. This configuration must be applied to the primary (master) accounts and any additional accounts to which users need access. For more information, refer to the\naccount structure with SSO\n.\nImportant Note:\nUsers cannot be assigned to additional accounts via SSO alone; they must be manually invited to each Lytics account to which they need access.\nTo set up role assignments via SSO, customers must configure their Identity Provider (IDP) to include a group assertion for each account the user can access. The role of each user must be specified in the format:\nlytics_<AID>_<Role>\nExample of a SAML assertion for a user whose default account is 123 and also has access to account 234:\nXML\n<samlp:Response xmlns:ds=\"<http://www.w3.org/2000/09/xmldsig#\">  \n    xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"  \n    xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:xs=\"<http://www.w3.org/2001/XMLSchema\">  \n    xmlns:xsi=\"<http://www.w3.org/2001/XMLSchema-instance\">  \n    Destination=\"<https://api.lytics.io/api/user/verifyauth\">  \n    Version=\"2.0\">  \n    <saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"  \n        ID=\"id1\" IssueInstant=\"2024-08-29T16:02:42Z\"  \n        Issuer=\"<https://your-idp.example.com\">  \n        Version=\"2.0\">  \n        <ds:Signature xmlns:ds=\"<http://www.w3.org/2000/09/xmldsig#\">123456>\\</ds:Signature>  \n        <saml:AttributeStatement>  \n            <saml:Attribute Name=\"Email\">  \n                <saml:AttributeValue xsi:type=\"xs:string\">\n[emailÂ protected]\n</saml:AttributeValue>  \n            </saml:Attribute>  \n            <saml:Attribute Name=\"groups\"> Â   \n                <saml:AttributeValue  \n                    xmlns:xsi=\"<http://www.w3.org/2001/XMLSchema-instance\">  \n                    xsi:type=\"xs:string\">lytics_123_content_manager</saml:AttributeValue>  \n                <saml:AttributeValue  \n                    xmlns:xsi=\"<http://www.w3.org/2001/XMLSchema-instance\">  \n                    xsi:type=\"xs:string\">lytics_123_admin</saml:AttributeValue>  \n                <saml:AttributeValue  \n                    xmlns:xsi=\"<http://www.w3.org/2001/XMLSchema-instance\">  \n                    xsi:type=\"xs:string\">lytics_234_admin</saml:AttributeValue>  \n            </saml:Attribute>  \n        </saml:AttributeStatement>  \n    </saml:Assertion>  \n</samlp:Response>\nNote: This example is simplified to focus only on the group's assertion; a real-world example would be more detailed.\nAssignable roles\nThe following roles can be assigned:\nAssignable Role\nName\nDescription\nadmin\nAccount Admin\nGrants read/write access to all features and management functions.\ncontent_manager\nContent Manager\nGrants read/write access to content classification, collections, and topics.\nsegment_manager\nAudience Manager\nGrants read/write access to audiences.\nmarketer\nMarketer\nGrants read/write access to audiences and campaigns but cannot publish campaigns or export audiences.\nuser_search\nUser Search\nIt grants the ability to search for users, view their profiles\nreport_viewer\nDiscovery Insights\nGrants access to explore Discovery insights\nreport_manager\nReport Manager\nCan view, create, and delete audience insight reports\nobserver\nObserver\nGrants read access to audiences and campaigns.\ndata_manager\nData Manager\nGrants read/write access to schemas, queries, users, content, and integrations, including PII user field access.\ncampaign_manager\nCampaign Manager\nGrants read/write access to campaigns and audiences without PII, including exporting audiences without PII and publishing campaigns.\norchestrate\nGoal Manager\nGrants read/write access to Goals and Experiences features.\nexperience_manager\nExperience Manager\nGrants read/write access to Experiences.\nImplementing SSO with Okta\nThis document will walk you through how to implement\nSingle Sign-On\nto the Lytics application with\nOkta\nas an identity provider. Lytics has applied to become an official Okta partner application. Still, while the partnership is being established, you can follow these instructions to set up the custom application in Okta, which covers the IDP configuration portion of the implementation.\nFrom your Okta Administration panel, navigate to\nApplications\nand then\nAdd Application\nand\nCreate New App\n.\nUnder Platform, select\nWeb\n, and for Sign on Method, choose\nSAML 2.0\n.\nUnder\nGeneral Settings\n, you can enter the following values:\nApp name\n: Lytics\nApp Logo\n: You can save and upload the following image of the Lytics Logo:\nUnder\nSAML Settings\n, enter the following values:\nSingle Sign-on URL\n:\nhttps://api.lytics.io/api/user/sso\nMake sure\nUse this for Recipient URL and Destination URL\nis not selected). Also select\nAllow this app to request other SSO URLs\nto enable more URLs to be added.\nRequestable SSO URLs\n: Add the following two URLs:\nhttps://api.lytics.io/api/user/verifyauth\n(index 0)\nhttps://api.lytics.io/api/user/sso\n(index 1)\nRecipient URL\n:\nhttps://api.lytics.io/api/user/verifyauth\nDestination URL\n:\nhttps://api.lytics.io/api/user/verifyauth\nAudience URI (SP Entity ID)\n:\napp.lytics.com\nName ID format\n:\nEmailAddress\nðŸ“˜\nNOTE: The\nhttps://api.lytics.io/api/user/sso\nURL should only be used for Okta. Other SSO providers use the default URL\nhttps://api.lytics.io/api/user/verifyauth\nClick through the next step, and select\nFinish\n.\nYou can add users to view this application in their portal using the\nAssignments\ntab.\nNavigate to the\nSign On\ntab. And under settings, click on\nView Setup Instructions\n.\nYou will need to gather the information on this page and send it to Lytics for configuration of the Service Provider:\nIdentity Provider Single Sign-On URL\nIdentity Provider Issuer\nX.509 Certificate\nOnce Lytics has completed the service provider implementation, you may begin to test the SSO implementation through your Okta portal.\nImplementing SSO with OneLogin\nThis document will walk you through how to implement\nSingle Sign-On\nto the Lytics application with\nOneLogin\nas an identity provider. You can follow these instructions to set up the custom application in OneLogin, which covers the IDP configuration portion of the implementation.\nFrom the\nAdministration\nmenu, select\nApplications\nand then click\nAdd App\n. Search for\nSAML Test Connector (Advanced)\nand select that app type.\nUnder\nConfiguration > Portal\nenter the following:\nDisplay Name\n:\nLytics\nMake sure\nVisible in Portal\nis selected.\nFor the rectangular icon, you can save and upload the following image:\nFor the square icon, you can save and upload the following image:\nClick\nSave\nto continue to the configuration process. Then click on the\nConfiguration\ntab to set up the SAML details.\nEnter the following into the\nApplication details\n:\nAudience (EntityID)\n:\napp.lytics.com\nRecipient\n:\nhttps://api.lytics.io/api/user/verifyauth\nACS (Consumer) URL Validator\n:\n^https:\\/\\/api.lytics.io\\/api\\/user\\/verifyauth\nACS (Consumer) URL\n:\nhttps://api.lytics.io/api/user/verifyauth\nLogin URL\n:\nhttps://app.lytics.com/login/sso\nSAML initiator\n:\nService Provider\nSAML nameID format\n:\nEmail\nClick on the\nSave\nto save your configuration changes.\nYou may configure any additional access details, such as users accessing this app in their portal for testing the integration under the\nUser\ntab.\nClick on the\nSSO\ntab, and you will need to gather the information on this page and send it to Lytics for configuration of the Service Provider:\nX.509 Certificate (click\nView Details\nto see the full cert).\nIssuer URL\nSLO Endpoint (HTTP)\nOnce Lytics has completed the service provider implementation, you may begin to test the SSO implementation through your OneLogin portal.\nUpdated\n4 months ago",
  "source": "lytics"
}