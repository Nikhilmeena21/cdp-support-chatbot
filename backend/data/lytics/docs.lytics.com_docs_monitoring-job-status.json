{
  "url": "https://docs.lytics.com/docs/monitoring-job-status",
  "title": "Exporting Audit Logs or Alert Jobs",
  "content": "Exporting Audit Logs or Alert Jobs\nSuggest Edits\nLytics System Events: Audit Logs and Alerts\nIn Lytics, audit logs and system alerts originate from a shared source:\nLytics System Events\n. A System Event is simply a log of an action taken within the platform, whether itâ€™s a user creating a job, segment, or role, or an error message indicating a job failure.\nExport vs. Alert\nLog Export\n: This is a job that either streams logs in real time or performs a batch export to an external source, such as a webhook or a data warehouse table.\nLog Alert\n: Alerts are triggered based on specified conditions and notify users when certain actions occur within the system.\nIn both cases, the content of exports or alerts depends on the filters you set up. Filtering is typically done using the\nSubject\n(such as User, Segment, or Job) and the\nVerb\n(the action taken on the subject, like created, updated, deleted, or failed).\nCreating an Audit Log export (aka System Alert) Job via the UI\nCreating a job to export your Audit and System Event logs is like creating any other job; for more information, see\nData Pipeline-> Jobs\n.    In the\nFilters\npanel, simply select\nAudit Logs\nto create an export of your Audit logs or System Events.\nDepending on your\nProvider\n, you can then select to export\nSystem Events\n.\nFor example, if you selected\nGoogle Cloud\nand you want to export the events to\nBigQuery\n.\nThen, you'd want to select the\nBigQuery: Export System Events\nJob-Type tile.   After choosing the Job-Type, it's like configuring any other export job.  In the case of BigQuery, you can do a one-time or continuous export.\nCreating an Alert based on System Events\nCreating a job to alert on an Audit and System Event logs is like creating any other job; for more information, see\nData Pipeline-> Jobs\n.    In the\nFilters\npanel, simply select\nAudit Logs\nto create an export of your Audit logs or System Events.\nDepending on your\nProvider\n, you can then select to export\nSystem Events\nor\nEmail Alerts\n.\nFor example, if you select to get an email when an Alert is triggered, then use\nLytics\nas your provider and select\nEmail Alerts\n.\nThen configure what\nSubject\nyou wanted to listen too and what\nEvent Types (aka Verbs)\n.\nFiltering Audit logs\nAudit logs can be filtered by\nSubject Type\n: what the event is about, such as\nwork\n,\nworkflow\n,\nuser\n,\ncampaign\n. See the\nlist of subject types below\n.\nSubject ID\n: identifier of a subject, such as work ID, workflow ID, campaign ID, etc.\nVerb\n: action described by the event performed on a subject. See the list of available verbs below.\nVerb\nDescription\nFrequency\nsynccomplete\nFor the completion of one synchronization cycle. Emitted when a work cycle finishes successfully. This is shown at the end when there are multiple cycles per scheduled sync or when there is a sleep cycle.\nReal-time\nupdate\nFor when work configuration is modified. It may occur multiple times per work.\nReal-time, batch\ncreated\nFor when works are created. This only occurs only once per work.\nReal-time, batch\ndeleted\nFor when a work is deleted.\nReal-time, batch\nsynced\nFor the completion of one sync unit (multiple units may happen per sleep cycle).\nReal-time\ncompleted\nFor the final successful completion of a work. This occurs once per work.\nBatch\nstarted\nFor the first time, work is started. This occurs once per work.\nReal-time, batch\nfailed\nFor the final failure of a work. This occurs once per work unless work is bounced.\nReal-time, batch\nsyncing\nFor the start of a series of sync cycles for a work.\nReal-time\nSubject Type\nDescription\naccount\nRepresents account-related actions or changes.\nauth\nRefers to authentication events, including 3rd party access control activities with service accounts.\nuser\nActions related to user accounts, such as creation, update, or deactivation.\ncampaign\nActions or modifications related to marketing campaigns.\ndata\nCovers data management events, such as data ingestion and updates.\nentity\nRefers to actions involving user entities aka Profiles.\nexperience\nActions associated with experience.\njourney\nPertains to events tracking customer journeys and related updates.\nprogram\nEvents involving the creation or modification of programs within the system.\nprovider\nRefers to data provider configurations or integrations.\nquery\nCovers actions involving Lytics queries.\nreport\nRefers to generation, access, or modification of Lytics reports.\nrollup\nInvolves aggregation events, such as data roll-ups for analytics.\nschema\nActions associated with data schema configuration and updates.\nschematable\nRefers to operations involving schema tables or data structure definitions.\nscoring\nCovers actions involving user scoring mechanisms within the system.\nsegment\nEvents related to segment creation, modification, or deletion.\nsegmentcollection\nRefers to collections of segments and associated actions.\nsegmentml\nInvolves machine learning (ML) processes related to segment analysis.\nstream\nActions or updates related to a Lytics stream.\nsubscription\nEvents involving subscriptions, such as subscription creation or cancellation.\ntopic-document\nRefers to topic modeling or document processing events.\nvariation\nRefers to A/B testing or variation setup within experiences or campaigns.\nwork\nCovers general work-related actions or tasks within the system.\nworkflow\nActions associated with workflow creation, modification, or execution\nJob Status Monitoring via Webhooks\nJob-status events can be observed by creating a webhook subscription that POSTs data (or JSON) to a specific URL. These updates, like email alerting and reporting, can be consumed downstream for your monitoring use cases.  Some common examples include listening for audience exports created/updated/deleted or being notified whenever a batch import or export for a given integration fails.\nWork related filters\nFor events related to the subject type\nwork\n, the following\nverbs\nmay be emitted:\nsynccomplete\n- Emitted when a sync operation is completed.\nupdated\n- Emitted when the job configuration is modified.\ncreated\n- Emitted when a new job is created.\ndeleted\n- Emitted when a job is terminated.\nsynced\n- Emitted when the job sync operation completes.\ncompleted\n- Emitted when a job has finished successfully.\nstarted\n- Emitted when a job begins execution.\nfailed\n- Emitted when a job encounters an error.\nsyncing\n- Emitted while a job is actively syncing.\nBuilding custom Alerts/Exports using our Webhook Integration\nOverview\nLytics provides a webhook integration that allows you to monitor and react to system events in real-time. This integration enables you to build automated workflows, trigger external actions, and maintain synchronization with your other systems based on events occurring within Lytics.\nConfiguration Examples\nBasic Webhook Setup\nThe following example shows how to subscribe to multiple event types and send them to a webhook endpoint:\nJSON\n{\n    \"config\": {\n        \"system_event_multiple_types\": [\"updated\", \"created\", \"failed\"],\n        \"webhook_url\": \"YOUR_WEBHOOK_ENDPOINT\",\n        \"headers\": {\n            \"custom-header\": \"header-value\"\n        }\n    },\n    \"workflow\": \"webhook_system_events\"\n}\nSlack Integration\nYou can integrate Lytics system events with Slack using a custom JSON template. This example shows how to send failure notifications to a Slack channel:\nJSON\n{\n    \"config\": {\n        \"system_event_type\": \"failed\",\n        \"webhook_url\": \"YOUR_SLACK_WEBHOOK_URL\",\n        \"json_template\": \"local note = if std.objectHas(event.data, \\\"notes\\\") then event.data.notes else \\\"A work failed\\\"; {\\\"text\\\": \\\"Alert notification: \\\" + note + \\\". For more info go to: https://activate.getlytics.com/data/integrations/work/%s?aid=%s\\\" % [event.data.subject_id, event.data.aid] }\"\n    },\n    \"workflow\": \"webhook_system_events\"\n}\nAdvanced Filtering\nYou can filter events by source type and ID using the\nsystem_event_sources\nconfiguration:\nFilter by Specific IDs\nJSON\n{\n    \"config\": {\n        \"system_event_multiple_types\": [\"updated\", \"created\", \"failed\"],\n        \"system_event_sources\": {\n            \"work\": [\n                \"work-id-1\",\n                \"work-id-2\"\n            ]\n        },\n        \"webhook_url\": \"YOUR_WEBHOOK_ENDPOINT\",\n        \"headers\": {\n            \"custom-header\": \"header-value\"\n        }\n    },\n    \"workflow\": \"webhook_system_events\"\n}\nMonitor All Events of a specific Verb Type\nTo receive events for all works in your account, use an empty array.\nJSON\n{\n    \"config\": {\n        \"system_event_multiple_types\": [\"updated\", \"created\", \"failed\"],\n        \"system_event_sources\": {\n            \"work\": []\n        },\n        \"webhook_url\": \"YOUR_WEBHOOK_ENDPOINT\",\n        \"headers\": {\n            \"custom-header\": \"header-value\"\n        }\n    },\n    \"workflow\": \"webhook_system_events\"\n}\nBest Practices\nEnsure your webhook endpoint can handle the expected volume of events\nImplement proper error handling and retry logic in your webhook receiver\nUse HTTPS endpoints for secure data transmission\nMonitor webhook delivery success rates and implement appropriate alerting\nSupport\nFor additional assistance or questions about webhook integration, please contact Lytics support or consult our API documentation.\nUpdated\n4 months ago",
  "source": "lytics"
}